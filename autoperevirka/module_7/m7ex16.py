# Розберемо просту техніку кодування та декодування на основі серій. Наприклад, у нас є список 
# із повторюваними спостереженнями якоїсь величини, вона може приймати значення X, Y або Z. 
# Значення з'являються у довільному порядку та зберігаємо ми їх у списку 
# ["X", "X", "X", "Z", "Z", "X", "X", "Y", "Y", "Y", "Z", "Z"] або рядку "XXXZZXXYYYZZ".

# Внаслідок чого ми можемо зменшити обсяг інформації, що зберігається? Стиснення можна досягти 
# заміною групи повторюваних значень на одноразове значення та лічильник повторів: ["X", 3, "Z", 2, "X", 2, "Y", 3, "Z", 2]

# Напишіть рекурсивну функцію decode для декодування списку, закодованого цим способом. 
# Як аргумент функція приймає закодований список. Функція має повернути розшифрований список елементів.

# def decode(data):
#     rslt = []
#     for ch, k in zip(data[::2], data[1::2]):
#         if len(ch) != k:
#             rslt.extend(decode([ch[0]*k,k]))
#         else:
#             "".split(ch)
#             rslt.extend(ch)
#     return rslt

#                   Рекурсія v.2
def decode(data):
    if not data: return []
    char, count = data[0], data[1]
    return [char] * count + decode(data[2:])

#                   Не рекурсія :-)
# def decode(data):
#     rslt = []
#     for indx, item in enumerate(data):
#         if indx % 2 != 0:
#             rslt.append(data[indx - 1] * item)
#     return rslt

lst = ['X', 5, 'Z', 1, 'X', 1, 'Y', 4, 'Z', 2]
print(decode(lst))

# "X", 3, "Z", 2, "X", 2, "Y", 3, "Z", 2