# Напишіть регулярний вираз для функції find_all_emails, яка буде в тексті (параметр text) 
# знаходити всі email та повертати список отриманих з тексту збігів.

# З метою спрощення приймемо, що:

# ми використовуємо для email, — англійський алфавіт
# префікс (все, що знаходиться до символу @) починається з латинської літери та може містити 
# будь-яке число або букву, включаючи нижнє підкреслення та символ точки. Має складатися 
# мінімум із двох символів
# суфікс email (все, що знаходиться після символу @) складається лише з букв англійського 
# алфавіту, та має дві частини, розділені точкою, також доменне ім'я верхнього рівня не 
# може бути менш ніж два символи (все, що після точки)
# Даний регулярний вираз жодною мірою не претендує на покриття всіх можливих варіантів email.

# При виконанні цього завдання ми рекомендуємо використовувати наступний сервіс для перевірок 
# регулярних виразів regex101.

import re


def find_all_emails(text):
    result = re.findall(r"\b[a-z][\w\.]+@[\w]+\.\w\w+\b", text, re.IGNORECASE)
    return result


# text ='Ima.Fool@iana.org Ima.Fool@iana.o 1Fool@iana.org first_last@iana.org first.middle.last@iana.or a@test.com abc111@test.com.net'
text = 'Ima.Fool@iana.org Ima.Fool@iana.o 1Fool@iana.org first_last@iana.org first.middle.last@iana.or a@test.com abc111@test.com.net Simple email cool@api.io cool@api.i first.middle.last@iana.or a2@test.com a3@test.com.io 222111@test.com'
print(find_all_emails(text))


# . — будь-який символ, крім символу кінця рядка.
# \d — число або [0-9].
# \D — не число, або [^0-9].
# \s — будь-який символ, що позначає пробіл або табуляцію, перенесення рядка та ін.
# \w — будь-яке число або літера, включаючи нижнє підкреслення, або [a-zA-Z0-9_].
# \W — не буква, не число і нижнє підкреслення.
# \S — збігається із не пробільними символами.
# \b — збіги шукатимуться лише на межах слів (на початку або в кінці).
# \B — збіги шукатимуться тільки не на межах слів.
# \n — збігається із символом переводу рядка.